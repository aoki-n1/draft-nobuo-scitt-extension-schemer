



SCITT                                                            N. Aoki
Internet-Draft                                                  SOKENDAI
Intended status: Informational                           21 October 2025
Expires: 24 April 2026


            A YANG Data Model for Multi-Statements of SCITT
              draft-nobuo-scitt-use-cases-extension-latest

Abstract

   This document defines components, as represented by Software Bills of
   Materials (SBOMs); statements protecting the transparent lifecycle of
   those components; and alternative means for acquiring integrated
   Supply Chain information, including provenance and configuration
   details.

About This Document

   This note is to be removed before publishing as an RFC.

   Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-nobuo-scitt-use-cases-
   extension/.

   Discussion of this document takes place on the SCITT Working Group
   mailing list (mailto:scitt@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/scitt/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/scitt/.

   Source for this draft and an issue tracker can be found at
   https://github.com/aoki-n1/draft-nobuo-scitt-use-cases-extension.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 24 April 2026.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
     1.1.  Terminology
     1.2.  Statement formats
     1.3.  Discussion points
     1.4.  The multi-statements schemer model extension
   2.  Privacy Considerations
   3.  Security Considerations
   4.  References
     4.1.  Normative References
     4.2.  Informative References
   Author's Address

1.  Introduction

   A Software Bill of Materials (SBOM) describes the software contained
   within a device (including version management and dependencies),
   while a Hardware Bill of Materials (HBOM) describes the hardware
   contained within a device.  Additionally, an XBOM exists.  Various
   formats exist for SBOMs, including Software Package Data Exchange
   [SPDX], Software Identity Tags [SWID], and CycloneDX [CycloneDX12].

   SCITT ARCH provides supply chain information by issuing receipts for
   each stage of the software lifecycle.

   A computer is an aggregate of hardware, software, and configuration.
   Providing supply chain information using the above method results in
   multiple statements.  This draft specifies the means by which
   integrated multi-statements can be advertised and retrieved.

   The mechanisms specified in this document are meant to satisfy
   several use cases:

   *  The hardware management system acquires integrated multi-
      statements from data center infrastructure devices and IoT devices
      as part of a continuous lifecycle.  It evaluates whether the
      acquired integrated multi-statements can be used to correctly
      establish the Root of Trust.

   *  The software layer management system acquires integrated multi-
      statements from the virtualization infrastructure as part of its
      continuous lifecycle.  This multi-layer software is evaluated to
      determine whether it can be consistently delivered to consumers as
      a transparent, integrated product.

   To fulfill these key use cases, integrated statements may be verified
   using one of the following methods.

1.1.  Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

1.2.  Statement formats

   As abstracted in SCITT
   Architecture　[I-D.draft-ietf-scitt-architecture], this draft also
   does not refer to the internal format of XBOM or Provence, treating
   them entirely as statements.

1.3.  Discussion points

   The following is discussion to be removed at time of RFC publication.

   *  Is the model structure suitable for partially or comprehensively
      representing tree structures like computer systems?

   *  Are there field names adopted in widely accepted models?

1.4.  The multi-statements schemer model extension

   The following is discussion to be removed at time of after the SCITT
   WG adopted.

   This draft does not affect the RFCization process of the SCITT
   Architecture and SCRAPI.  While awaiting the two starter
   specifications' RFCization, we will progressively mature this draft.
   During this period, we will focus on use cases that can foster broad
   consensus and on the data model's scope.

   TODO.

2.  Privacy Considerations

   The privacy considerations of the SCITT Architecture
   [I-D.draft-ietf-scitt-architecture] apply.

3.  Security Considerations

   The privacy considerations of the SCITT Architecture
   [I-D.draft-ietf-scitt-architecture] apply.

4.  References

4.1.  Normative References

   [I-D.draft-ietf-scitt-architecture]
              Birkholz, H., Delignat-Lavaud, A., Fournet, C., Deshpande,
              Y., and S. Lasker, "An Architecture for Trustworthy and
              Transparent Digital Supply Chains", Work in Progress,
              Internet-Draft, draft-ietf-scitt-architecture-22, 10
              October 2025, <https://datatracker.ietf.org/doc/html/
              draft-ietf-scitt-architecture-22>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

4.2.  Informative References

   [RFC9472]  Lear, E. and S. Rose, "A YANG Data Model for Reporting
              Software Bills of Materials (SBOMs) and Vulnerability
              Information", RFC 9472, DOI 10.17487/RFC9472, October
              2023, <https://www.rfc-editor.org/rfc/rfc9472>.

   [SoK-SW-SCS]
              Okafor, C., Schorlemmer, T., Torres-Arias, S., and J.
              Davis, "SoK: Analysis of Software Supply Chain Security by
              Establishing Secure Design Properties", ACM, Proceedings
              of the 2022 ACM Workshop on Software Supply Chain
              Offensive Research and Ecosystem Defenses pp. 15-24,
              DOI 10.1145/3560835.3564556, November 2022,
              <https://doi.org/10.1145/3560835.3564556>.

Author's Address

   Nobuo Aoki
   The Graduate University for Advanced　Studies (SOKENDAI)
   Japan
   Email: n_aoki@ieee.org
